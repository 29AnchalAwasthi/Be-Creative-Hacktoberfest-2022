class Solution {
public:
    void dfs(int i,vector<bool> &vis,vector<int> adj[])
    {
        vis[i]=true;
        for(auto it:adj[i])
        {
            if(!vis[it])
                dfs(it,vis,adj);
        }
    }
    int removeStones(vector<vector<int>>& stones) {
       int n=stones.size(); int ctr=0; vector<int> adj[n];
        int row=stones.size(),m=stones[0].size();
        for(auto x:stones)
        {
            vector<int> a=x;
            int u=a[0]; int v=a[1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<bool> vis(m,false);
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                ctr++;
                dfs(i,vis,adj);
            }
        } 
        int ans=n-ctr;
        cout<<ctr;
        return ans;
    }
};
